{"version":3,"file":"static/js/944.652c3531.chunk.js","mappings":"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","sources":["hooks/redux/auth/useAuth.ts","libraries/form/input/input-password-form.tsx","webpack://base-react-mui/./src/modules/auth/sign-in/styles.module.scss?a0ca","modules/auth/sign-in/utils/sign-un.services.ts","modules/auth/sign-in/index.tsx","modules/auth/sign-in/utils/sign-in.utils.ts"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport localStorageUtils, { KeyStorage } from 'utils/local-storage.utils';\nimport { RootState } from 'utils/redux-store';\nimport { changeAuth, LocalAuth } from './reducer';\n\nfunction useAuth() {\n  const auth = useSelector((state: RootState) => state.auth);\n  const dispatch = useDispatch();\n\n  const setAuth = (data: LocalAuth | null) => {\n    localStorageUtils.setObject(KeyStorage.AUTH, data);\n    const actionChangeAuth = changeAuth(data);\n    dispatch(actionChangeAuth);\n  };\n\n  return {\n    auth,\n    setAuth\n  };\n}\n\nexport default useAuth;\n","import { Form } from 'antd';\nimport { Rule } from 'antd/lib/form';\nimport clsx from 'clsx';\nimport Input from 'libraries/UI/Input';\nimport styles from './styles.module.scss';\n\ninterface Props {\n  label?: string;\n  name: string;\n  rules?: Rule[];\n  placeholder?: string;\n  autoComplete?: 'on' | 'off';\n  dependencies?: string[];\n  normalize?: (value: any) => any;\n  // custom\n  classNameFormInput?: any;\n  className?: any;\n}\n\nexport default function InputPasswordForm({\n  label,\n  placeholder,\n  name,\n  rules,\n  autoComplete = 'off',\n  dependencies,\n  classNameFormInput,\n  className,\n  normalize\n}: Props) {\n  return (\n    <Form.Item\n      label={label}\n      name={name}\n      rules={rules}\n      normalize={normalize}\n      className={clsx(styles.customInputPasswordFormItem, {\n        [classNameFormInput]: true\n      })}\n      dependencies={dependencies}>\n      <Input\n        className={clsx(styles.customInputPasswordForm, {\n          [className]: true\n        })}\n        placeholder={placeholder}\n        autoComplete={autoComplete}\n        type=\"password\"\n      />\n    </Form.Item>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"signInPage\":\"styles_signInPage__8WY2V\",\"titlePage\":\"styles_titlePage__7v2L6\",\"titleSignIn\":\"styles_titleSignIn__u+3b6\",\"formWrap\":\"styles_formWrap__3FHfl\",\"actionMore\":\"styles_actionMore__NCvtu\",\"actionItem\":\"styles_actionItem__ixMWP\",\"buttonSubmit\":\"styles_buttonSubmit__Ic8ZK\",\"link\":\"styles_link__wMjDA\"};","import { API_PATH } from 'utils/api/constant';\nimport { ResponseBase } from 'utils/api/api.types';\nimport ApiUtils from 'utils/api/api.utils';\nimport { SignInReq } from './sign-in.types';\n\nexport const apiSignIn = async (body: SignInReq) => {\n  const res = await ApiUtils.post<any, ResponseBase<any>>(API_PATH.LOGIN, body);\n  return res;\n};\n","import { Form } from 'antd';\nimport clsx from 'clsx';\nimport InputForm from 'libraries/form/input/input-form';\nimport InputPasswordForm from 'libraries/form/input/input-password-form';\nimport ContainerLayout from 'libraries/layouts/container.layout';\nimport Button from 'libraries/UI/Button';\nimport { useTranslation } from 'react-i18next';\nimport { RegexUtils } from 'utils/regex-helper';\nimport styles from './styles.module.scss';\nimport SignInUtils from './utils/sign-in.utils';\n\nexport default function SignInPage() {\n  const { t } = useTranslation();\n  const { loadingSignIn, onLogin, onGoToRegister, onGoToForgotPassword } = SignInUtils();\n\n  return (\n    <ContainerLayout title={t('sign_in.title')}>\n      <div className={styles.signInPage}>\n        <h1 className={styles.titlePage}>{t('welcome_auth')}</h1>\n\n        <div className={styles.formWrap}>\n          <h4 className={clsx('mb-52 mt-86', styles.titleSignIn)}>{t('sign_in.title')}</h4>\n          <Form layout=\"vertical\" name=\"basic\" onFinish={onLogin} autoComplete=\"off\">\n            <div className=\"mb-16\">\n              <InputForm\n                label={t('email_address')}\n                name=\"email_abc\"\n                rules={[\n                  {\n                    validator: async (_, value) => {\n                      if (!value) {\n                        return Promise.reject(\n                          t('messages.errors.require', { field: t('email_address') })\n                        );\n                      }\n\n                      const regexEmail = new RegExp(RegexUtils.RegexConstants.REGEX_EMAIL);\n                      if (!regexEmail.test(value.trim())) {\n                        return Promise.reject(t('messages.errors.email_invalid'));\n                      }\n\n                      return Promise.resolve();\n                    }\n                  }\n                ]}\n              />\n            </div>\n\n            <div className=\"mb-12\">\n              <InputPasswordForm\n                label={t('password')}\n                name=\"password_abc\"\n                rules={[\n                  {\n                    required: true,\n                    message: t('messages.errors.require', { field: t('password') })\n                  }\n                ]}\n              />\n            </div>\n\n            {/** Action more */}\n            <div className={clsx(styles.actionMore)}>\n              <p className={styles.actionItem} onClick={onGoToForgotPassword}>\n                {t('forgot_password')}\n              </p>\n            </div>\n\n            <Form.Item>\n              <Button htmlType=\"submit\" className={styles.buttonSubmit} loading={loadingSignIn}>\n                {t('login_button')}\n              </Button>\n            </Form.Item>\n\n            <p onClick={onGoToRegister} className={styles.link}>\n              Create an account\n            </p>\n          </Form>\n        </div>\n      </div>\n    </ContainerLayout>\n  );\n}\n","import { message } from 'antd';\nimport { useRequest } from 'ahooks';\nimport useAuth from 'hooks/redux/auth/useAuth';\nimport { useNavigate } from 'react-router-dom';\nimport { routePath } from 'routing/path.routing';\nimport { ResponseCode } from 'utils/api/api.types';\nimport { SignInReq } from './sign-in.types';\nimport { apiSignIn } from './sign-un.services';\n\ninterface Utils {\n  onLogin: (values: any) => void;\n  onGoToRegister: () => void;\n  onGoToForgotPassword: () => void;\n  loadingSignIn: boolean;\n}\n\nexport default function SignInUtils(): Utils {\n  const navigate = useNavigate();\n  const { setAuth } = useAuth();\n\n  // when on click button submit login\n  const reqLogin = useRequest(\n    async (values: any) => {\n      const body: SignInReq = {\n        email: values?.email_abc?.trim(),\n        password: values?.password_abc\n      };\n      // call api here\n      return apiSignIn(body);\n    },\n    {\n      manual: true,\n      onSuccess: (r: any, params) => {\n        const values = params[0];\n        if (r.code === ResponseCode.SUCCESS) {\n          console.log('login success');\n        }\n\n        setAuth({\n          accessToken: r?.content?.accessToken,\n          refreshToken: r?.content?.refreshToken,\n          expireTime: Date.now() + r?.content?.expireTime * 1000,\n          user: {\n            email: values?.email_abc\n          }\n        });\n      },\n      onError: (err: any) => {\n        message.error(err?.content?.messageContent || 'Login Failed');\n      }\n    }\n  );\n\n  // go to register page\n  const onGoToRegister = () => {\n    navigate(routePath.SignUp);\n  };\n\n  // go to forgot password page\n  const onGoToForgotPassword = () => {\n    navigate(routePath.ForgotPassword);\n  };\n\n  return {\n    loadingSignIn: reqLogin.loading,\n    onLogin: reqLogin.run,\n    onGoToRegister,\n    onGoToForgotPassword\n  };\n}\n"],"names":["auth","useSelector","state","dispatch","useDispatch","setAuth","data","localStorageUtils","KeyStorage","actionChangeAuth","changeAuth","InputPasswordForm","label","placeholder","name","rules","autoComplete","dependencies","classNameFormInput","className","normalize","clsx","styles","type","apiSignIn","body","ApiUtils","API_PATH","res","SignInPage","t","useTranslation","navigate","useNavigate","useAuth","reqLogin","useRequest","values","email","email_abc","trim","password","password_abc","manual","onSuccess","r","params","code","ResponseCode","console","log","accessToken","content","refreshToken","expireTime","Date","now","user","onError","err","message","messageContent","loadingSignIn","loading","onLogin","run","onGoToRegister","routePath","onGoToForgotPassword","SignInUtils","title","layout","onFinish","validator","_","value","Promise","reject","field","RegExp","RegexUtils","test","resolve","required","onClick","Button","htmlType"],"sourceRoot":""}