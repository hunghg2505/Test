{"version":3,"file":"static/js/841.26d6edf1.chunk.js","mappings":"6IAiBA,IAbA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMF,YACnDG,GAAWC,EAAAA,EAAAA,MAQjB,MAAO,CAAEJ,SAAAA,EAAUK,SANF,SAACC,GAChB,GAAIA,GAASN,EAASM,QAAUA,EAAO,CACrC,IAAMC,GAASC,EAAAA,EAAAA,GAAe,CAAEF,MAAAA,IAChCH,EAASI,Q,sFCHA,SAASE,EAAT,GAGJ,IAFTC,EAEQ,EAFRA,SAEQ,IADRJ,MAAAA,OACQ,MADAK,WACA,EACAN,GAAaO,EAAAA,EAAAA,KAAbP,SAIR,OAHAQ,EAAAA,EAAAA,YAAU,WACRR,EAASC,KACR,CAACD,EAAUC,KACP,SAAC,EAAAQ,SAAD,UAAWJ,M,0GCNL,SAASK,EAAT,GAAqD,IAA5BC,EAA2B,EAA3BA,GACtC,OACE,SAAC,IAAD,CAAiBV,MAAM,iBAAvB,UACE,4CAAoBU,OCPX,SAASC,IACtB,OACE,SAAC,IAAD,CAAiBX,MAAM,cAAvB,UACE,2CCHS,SAASY,IACtB,IAAQF,GAAOG,EAAAA,EAAAA,MAAPH,GACFI,GAAWC,EAAAA,EAAAA,MAEjB,OAAKL,EAKM,QAAPA,GACK,SAACC,EAAD,KAGF,SAACF,EAAD,CAAeC,GAAIA,KARxBI,EAAS,YACF","sources":["hooks/redux/document/useDocument.ts","libraries/layouts/container.layout.tsx","libraries/components/ConsentManagement/ConsentDetail/index.tsx","libraries/components/ConsentManagement/NewConsent/index.tsx","modules/consentManagement/[id].tsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'utils/redux-store';\nimport { changeDocument } from './reducer';\n\nfunction useDocument() {\n  const document = useSelector((state: RootState) => state.document);\n  const dispatch = useDispatch();\n\n  const setTitle = (title: string) => {\n    if (title && document.title !== title) {\n      const action = changeDocument({ title });\n      dispatch(action);\n    }\n  };\n  return { document, setTitle };\n}\n\nexport default useDocument;\n","import useDocument from 'hooks/redux/document/useDocument';\nimport React, { Fragment, useEffect } from 'react';\n\ninterface Props {\n  title?: string;\n  children?: any;\n}\n\nexport default function ContainerLayout({\n  children,\n  title = process.env.REACT_APP_NAME || 'ABD-PDPA'\n}: Props) {\n  const { setTitle } = useDocument();\n  useEffect(() => {\n    setTitle(title);\n  }, [setTitle, title]);\n  return <Fragment>{children}</Fragment>;\n}\n","import React from 'react';\n\nimport ContainerLayout from 'libraries/layouts/container.layout';\n\nimport styles from './index.module.scss';\n\ninterface IConsentDetailProps {\n  id: string;\n}\n\nexport default function ConsentDetail({ id }: IConsentDetailProps) {\n  return (\n    <ContainerLayout title=\"Consent Detail\">\n      <h1>Consent Detail {id}</h1>\n    </ContainerLayout>\n  );\n}\n","import React from 'react';\n\nimport ContainerLayout from 'libraries/layouts/container.layout';\n\nimport styles from './index.module.scss';\n\nexport default function NewConsent() {\n  return (\n    <ContainerLayout title=\"New Consent\">\n      <div>new Consent</div>\n    </ContainerLayout>\n  );\n}\n","import React from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport ConsentDetail from 'libraries/components/ConsentManagement/ConsentDetail';\nimport NewConsent from 'libraries/components/ConsentManagement/NewConsent';\n\nexport default function ConsentNewPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  if (!id) {\n    navigate('/consent');\n    return null;\n  }\n\n  if (id === 'new') {\n    return <NewConsent />;\n  }\n\n  return <ConsentDetail id={id} />;\n}\n"],"names":["document","useSelector","state","dispatch","useDispatch","setTitle","title","action","changeDocument","ContainerLayout","children","process","useDocument","useEffect","Fragment","ConsentDetail","id","NewConsent","ConsentNewPage","useParams","navigate","useNavigate"],"sourceRoot":""}